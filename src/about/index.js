import React from 'react';
import {
  StyleSheet,
  Text,
  View,
  Image,
  TouchableOpacity,
  Dimensions,
  WebView,
  PixelRatio  
} from 'react-native';
import Icon from 'react-native-vector-icons/Ionicons';
import Carousel, { Pagination } from 'react-native-snap-carousel';
import SvgUri from 'react-native-svg-uri';

import IconD from '../IconD';
const { width: viewportWidth, height: viewportHeight } = Dimensions.get('window');

export default class SelectCity extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      activeSlide: 0,
      entries: [
        {
          title: 'Приложение с карточками',
          text: 'Привет. Наше приложение основано на карточной механнике. Буквально! У каждого блюда есть карточка товара которые вы можете листать, отмечать и собирать!'
        },
        {
          title: 'Рекомендации блюд из лучших ресторанов города',
          text: 'Мы лично проверили и одобрили каждые ресторан, с которым мы работаем'
        },
        {
          title: 'Программа лояльности',
          text: 'Чем чаще вы делаете заказы, тем выше ваш статус в программе лояльности. Высокий статус дает возможность получить дополнительные скидки и подарки'
        },
        {
          title: 'Бонусные сертификаты',
          text: 'Специальные бонусные сертификаты дают право на бесплатный заказ или на скидку. Вы можете самостоятельно использовать сертификат или подарить его другу.'
        }
      ],
      svgs: [`
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 237 208">
          <defs>
              <path id="a" d="M120.385.693H.283V208h120.102V.693z"/>
              <path id="c" d="M0 208.307h236.623V1H0z"/>
          </defs>
          <g fill="none" fill-rule="evenodd" transform="translate(0 -1)">
              <g transform="translate(58 .307)">
                  <mask id="b" fill="#fff">
                      <use xlink:href="#a"/>
                  </mask>
                  <path fill="#575862" d="M101.308 201.412h-28.79a14.496 14.496 0 0 0 2.403-7.998 14.49 14.49 0 0 0-2.403-8h41.279v3.509c0 6.886-5.603 12.489-12.49 12.489zM6.87 188.922v-3.508H48.15a14.49 14.49 0 0 0-2.403 8c0 2.952.888 5.699 2.402 7.998h-28.79c-6.886 0-12.488-5.603-12.488-12.49zm0-10.096h106.926V28.364H6.87v150.462zm61.462 14.588c0 4.41-3.588 7.998-8 7.998-4.41 0-7.998-3.587-7.998-7.998s3.588-8 7.999-8c4.41 0 7.999 3.589 7.999 8zM19.36 7.282h81.948c6.886 0 12.489 5.602 12.489 12.489v2.004H6.87V19.77c0-6.887 5.602-12.49 12.489-12.49zm81.948-6.59H19.36C8.84.693.283 9.253.283 19.772v169.152C.283 199.442 8.84 208 19.36 208h81.948c10.519 0 19.077-8.558 19.077-19.077V19.77c0-10.52-8.558-19.078-19.077-19.078z" mask="url(#b)"/>
              </g>
              <mask id="d" fill="#fff">
                  <use xlink:href="#c"/>
              </mask>
              <path fill="#E1C79B" d="M86.536 143.042h63.596V66.484H86.536v76.558zm-6.029 6.027h75.653V60.457H80.507v88.612z" mask="url(#d)"/>
              <path fill="#E1C79B" d="M102.553 77.776A4.776 4.776 0 1 1 93 77.775a4.776 4.776 0 0 1 9.553.001M21.299 77.776a4.776 4.776 0 1 1-9.553-.001 4.776 4.776 0 0 1 9.553.001M92.607 128.727h44.799V122.7H92.607zM92.606 137.621h22.4v-6.027h-22.4z" mask="url(#d)"/>
              <path fill="#E1C79B" d="M6.028 143.042h63.596V66.484H6.028v76.558zM0 149.069h75.653V60.457H0v88.612z" mask="url(#d)"/>
              <path fill="#E1C79B" d="M12.1 128.727h44.799V122.7H12.1zM12.099 137.621h22.4v-6.027h-22.4zM166.999 143.042h63.596V66.484h-63.596v76.558zm-6.029 6.027h75.653V60.457H160.97v88.612z" mask="url(#d)"/>
              <path fill="#E1C79B" d="M182.623 77.39a4.776 4.776 0 1 1-9.553-.001 4.776 4.776 0 0 1 9.553 0M173.071 128.727h44.799V122.7h-44.799zM173.07 137.621h22.4v-6.027h-22.4z" mask="url(#d)"/>
          </g>
        </svg>`,
        `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 273 208">
          <defs>
              <path id="a" d="M120.407.692H.305V208h120.102z"/>
              <path id="c" d="M0 57.51V.947h45.823V57.51H0z"/>
              <path id="e" d="M0 208.308h272.648V1H0z"/>
          </defs>
          <g fill="none" fill-rule="evenodd" transform="translate(0 -1)">
              <g transform="translate(69 .308)">
                  <mask id="b" fill="#fff">
                      <use xlink:href="#a"/>
                  </mask>
                  <path fill="#575862" d="M101.33 201.412H72.54a14.493 14.493 0 0 0 2.403-8c0-2.953-.888-5.7-2.402-7.998h41.278v3.509c0 6.886-5.602 12.489-12.489 12.489zm-94.436-12.49v-3.508h41.278a14.494 14.494 0 0 0-2.403 7.998c0 2.953.89 5.7 2.403 8H19.383c-6.887 0-12.489-5.603-12.489-12.49zm0-10.097H113.82V28.362H6.894v150.463zm61.461 14.587c0 4.41-3.588 8-7.999 8-4.41 0-7.998-3.59-7.998-8 0-4.411 3.588-7.998 7.998-7.998 4.411 0 8 3.587 8 7.998zM19.383 7.28h81.947c6.887 0 12.49 5.603 12.49 12.489v2.005H6.893v-2.005c0-6.886 5.602-12.49 12.49-12.49zM101.33.692H19.383C8.864.692.305 9.25.305 19.769v169.154C.305 199.442 8.865 208 19.383 208h81.947c10.52 0 19.077-8.558 19.077-19.077V19.769c0-10.52-8.558-19.077-19.077-19.077z" mask="url(#b)"/>
              </g>
              <path fill="#E1C79B" d="M154.638 123.389h-50.3c-4.897 0-9.034-4.08-9.034-8.907 0-1.543.413-3.07 1.194-4.42l.875-1.51-.876-1.511a8.822 8.822 0 0 1-1.193-4.416c0-4.877 3.967-8.844 8.843-8.844 1.692 0 3.343.488 4.775 1.409l2.82 1.817 1.506-3c4.398-8.768 13.214-14.216 23.008-14.216 4.45 0 8.622 1.162 12.274 3.163a19.357 19.357 0 0 1-14.371 8.879l-.445.064a13.86 13.86 0 0 0-11.324 13.625c0 7.646 6.22 13.866 13.866 13.866 6.744 0 12.484-4.82 13.658-11.524 0 0 .132-.89.132-.9.842-6.83 6.47-11.77 8.856-13.581a25.47 25.47 0 0 1 3.085 12.139c0 6.737-2.601 13.037-7.35 17.867m-.304-38.45c.318-.557.982-1.09 1.71-1.09a1.89 1.89 0 0 1 1.887 1.887 1.87 1.87 0 0 1-.91 1.596l-.33.226c-1.145.739-11.255 7.546-12.628 18.683-.02.144-.097.647-.097.649a7.814 7.814 0 0 1-7.71 6.47c-4.321 0-7.837-3.515-7.837-7.838a7.83 7.83 0 0 1 6.338-7.687l.138-.02c13.399-1.467 18.987-11.981 19.439-12.875m18.13-15.942c-.152 0-.295.03-.444.045 0-.016.005-.03.005-.045a4.546 4.546 0 0 0-9.092 0c0 1.427.67 2.685 1.7 3.518l-5.6 5.896a7.848 7.848 0 0 0-2.99-.591 7.74 7.74 0 0 0-3.162.688c-4.841-2.992-10.526-4.745-16.624-4.745-11.082 0-21.15 5.648-26.93 14.924a14.787 14.787 0 0 0-5.18-.934c-8.2 0-14.87 6.67-14.87 14.87 0 2.04.426 4.06 1.24 5.929a14.847 14.847 0 0 0-1.24 5.929c0 8.235 6.756 14.934 15.062 14.934h52.713l.868-.811c6.51-6.076 10.097-14.273 10.097-23.083 0-6.091-1.75-11.77-4.736-16.608a7.862 7.862 0 0 0 .679-3.178 7.88 7.88 0 0 0-.631-3.094l5.767-6.072a4.515 4.515 0 0 0 3.369 1.519 4.545 4.545 0 1 0 0-9.091"/>
              <g transform="translate(0 72.308)">
                  <mask id="d" fill="#fff">
                      <use xlink:href="#c"/>
                  </mask>
                  <path fill="#E1C79B" d="M15.353 57.51c-2.058 0-7.335-.373-11.165-3.921C1.408 51.017 0 47.434 0 42.945c0-7.257 5.929-12.164 11.16-16.492 6.585-5.448 8.326-7.627 6.39-10.64-.88-1.321-3.65-5.473-1.143-8.497 2.29-2.761 7.319-1.846 11.816-.216C30.578 3.959 33.557.946 36.318.946c3.349 0 7.017 4.43 9.505 8.149l-5.01 3.354c-1.472-2.196-3.43-4.474-4.496-5.278-1.067.804-3.025 3.082-4.494 5.277l-1.385 2.07-2.296-.971c-2.085-.883-4.468-1.598-6.074-1.875.143.244.316.524.528.84 5.157 8.036-1.913 13.885-7.593 18.586-4.412 3.65-8.974 7.426-8.974 11.847 0 2.768.73 4.796 2.23 6.2 2.796 2.612 7.46 2.326 7.506 2.329l.218-.008H43.47v6.027H16.072c-.145.008-.392.018-.72.018" mask="url(#d)"/>
              </g>
              <path fill="#E1C79B" d="M57.283 129.819c-.328 0-.574-.01-.72-.018H29.167v-6.027l27.719.009c.033-.003 4.694.283 7.49-2.33 1.502-1.404 2.232-3.432 2.232-6.2 0-4.421-4.562-8.197-8.973-11.847-5.681-4.701-12.751-10.55-7.622-18.541.229-.327.418-.615.575-.868-1.64.289-4.021.997-6.113 1.865l-2.284.95-1.377-2.056c-.015-.022-.238-.355-.601-.855l2.65-1.921-.7-1.684c7.34-3.051 12.135-3.266 14.249-.632 2.458 3.06-.442 7.199-1.394 8.558-1.866 2.912-.125 5.09 6.46 10.539 5.23 4.328 11.159 9.235 11.159 16.492 0 4.489-1.41 8.072-4.188 10.644-3.83 3.546-9.107 3.922-11.165 3.922"/>
              <path fill="#E1C79B" d="M42.228 129.8v-6.026c2.855 0 4.282-1.83 4.976-3.365 1.492-3.297 1.18-9.027-3.03-13.817l4.529-3.98c5.2 5.919 6.804 14.069 3.993 20.282-1.986 4.39-5.802 6.907-10.468 6.907M30.408 129.8c-4.666 0-8.482-2.516-10.468-6.906-2.811-6.213-1.207-14.363 3.993-20.281l4.528 3.979c-4.21 4.79-4.521 10.52-3.03 13.817.695 1.535 2.122 3.365 4.977 3.365v6.027z"/>
              <mask id="f" fill="#fff">
                  <use xlink:href="#e"/>
              </mask>
              <path fill="#E1C79B" d="M80.275 140.06h98.163v-6.027H80.275z" mask="url(#f)"/>
              <path fill="#E1C79B" d="M87.324 145.754h6.028v-8.707h-6.028zM165.362 145.754h6.028v-8.707h-6.028zM236.877 124.138h-26.08c-11.965 0-16.546-14.584-17.984-21.027h62.053c-1.429 6.442-5.988 21.027-17.989 21.027zm-30.347-26.35a5.09 5.09 0 0 1 5.084-5.058 5.09 5.09 0 0 1 5.082 5.059H206.53zm5.084-14.116c7.79 0 14.129 6.33 14.142 14.117h-3.738c-.013-5.727-4.674-10.381-10.404-10.381-5.73 0-10.392 4.654-10.406 10.38h-3.738c.014-7.786 6.353-14.116 14.144-14.116zm28.92.299l-2.879 3.437h-.01c-3.121 0-5.92 1.388-7.829 3.573a19.378 19.378 0 0 0-1.75-3.52c2.522-2.34 5.877-3.79 9.58-3.79.99 0 1.956.106 2.889.3zm-7.971 13.818a5.09 5.09 0 0 1 5.083-5.06 5.09 5.09 0 0 1 5.083 5.06h-10.167zm19.226 0h-3.738c-.01-3.674-1.935-6.898-4.825-8.744l2.416-2.884c3.702 2.547 6.138 6.806 6.147 11.628zm3.684-7.762l17.175-20.482-4.078-3.42-16.06 19.15a19.632 19.632 0 0 0-3.451-3.194l11.052-13.196-4.078-3.418-11.78 14.063a19.317 19.317 0 0 0-6.607-1.18c-5.007 0-9.555 1.924-13.006 5.043-3.454-3.123-8.014-5.043-13.025-5.043-10.726 0-19.45 8.718-19.465 19.439h-5.559l.38 2.996c.036.285.923 7.078 4.127 13.962 4.48 9.625 11.291 14.713 19.698 14.713h26.082c8.407 0 15.218-5.088 19.697-14.713 3.204-6.884 4.09-13.677 4.127-13.962l.38-2.996h-3.972a19.336 19.336 0 0 0-1.638-7.762z" mask="url(#f)"/>
          </g>
      </svg>`, 
      `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 121 208">
        <defs>
            <path id="a" d="M120.102.693H0V208h120.102V.693z"/>
            <path id="c" d="M0 208.307h120.102V1H0z"/>
        </defs>
        <g fill="none" fill-rule="evenodd" transform="translate(0 -1)">
            <g transform="translate(0 .307)">
                <mask id="b" fill="#fff">
                    <use xlink:href="#a"/>
                </mask>
                <path fill="#575862" d="M101.025 201.412h-28.79a14.493 14.493 0 0 0 2.403-8c0-2.953-.888-5.7-2.402-7.998h41.278v3.509c0 6.886-5.602 12.489-12.49 12.489zm-94.436-12.49v-3.508h41.277a14.494 14.494 0 0 0-2.402 7.998c0 2.953.888 5.7 2.403 8h-28.79c-6.886 0-12.488-5.603-12.488-12.49zm0-10.096h106.926V28.364H6.589v150.462zm61.46 14.586c0 4.41-3.587 8-7.998 8s-8-3.59-8-8c0-4.411 3.589-7.998 8-7.998 4.41 0 7.999 3.587 7.999 7.998zM19.079 7.282h81.947c6.887 0 12.489 5.602 12.489 12.489v2.004H6.589V19.77c0-6.887 5.602-12.49 12.489-12.49zm81.947-6.59H19.078C8.558.693 0 9.253 0 19.772v169.152C0 199.442 8.559 208 19.078 208h81.947c10.519 0 19.077-8.558 19.077-19.077V19.77c0-10.52-8.558-19.078-19.077-19.078z" mask="url(#b)"/>
            </g>
            <mask id="d" fill="#fff">
                <use xlink:href="#c"/>
            </mask>
            <path fill="#E1C79B" d="M28.252 136.453h63.596V59.895H28.252v76.558zm-6.028 6.028h75.653V53.869H22.224v88.612z" mask="url(#d)"/>
            <path fill="#E1C79B" d="M34.324 122.138h44.799v-6.027H34.324zM34.324 131.032h22.4v-6.027h-22.4zM60.05 94.818l7.52 3.102-.627-8.11 5.274-6.192-7.906-1.91-4.26-6.93-4.26 6.93-7.906 1.91 5.274 6.192-.627 8.11 7.519-3.102zm-14.284 12.416l1.19-15.409-10.02-11.763 15.023-3.63 8.092-13.165 8.093 13.165 15.02 3.63-10.018 11.763 1.19 15.41-14.285-5.896-14.285 5.895z" mask="url(#d)"/>
        </g>
      </svg>`,
      `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 228 208">
        <defs>
            <path id="a" d="M0 208h227.675V.693H0z"/>
        </defs>
        <g fill="none" fill-rule="evenodd">
            <path fill="#E1C79B" d="M100.845 82.694L116.86 98.71l-15.004 15.003-4.263-4.26 10.742-10.743-11.752-11.753z"/>
            <g transform="translate(0 -.693)">
                <path fill="#575862" d="M46.437 185.414v3.509c0 6.887 5.602 12.489 12.489 12.489h28.79a14.49 14.49 0 0 1-2.403-8c0-2.953.888-5.7 2.402-7.998H46.437zm45.464 7.998c0 4.41 3.588 8 7.999 8 4.41 0 7.999-3.59 7.999-8 0-4.411-3.588-7.998-8-7.998-4.41 0-7.998 3.587-7.998 7.998zm20.183 8h28.79c6.886 0 12.489-5.602 12.489-12.49v-3.508h-41.278a14.494 14.494 0 0 1 2.402 7.998 14.49 14.49 0 0 1-2.403 8zm-65.647-61.073v38.487h106.926V123.01h6.588v65.912c0 10.519-8.558 19.077-19.077 19.077H58.926c-10.52 0-19.077-8.558-19.077-19.077v-48.584h6.588zM46.437 19.77c0-6.886 5.602-12.488 12.489-12.488h81.948c6.886 0 12.489 5.602 12.489 12.489v2.005H46.437V19.77zm-6.588 0v37.984h6.588v-29.39h106.926v33.69l6.588-2.063V19.77c0-10.52-8.558-19.077-19.077-19.077H58.926c-10.52 0-19.077 8.558-19.077 19.077z"/>
                <path fill="#E1C79B" d="M227.675 131.805H122.704v6.027h7.746v6.297h6.029v-6.297H213.9v6.297h6.029v-6.297h7.746zM156.27 71.859a3.376 3.376 0 1 0 0 6.752 3.376 3.376 0 0 0 0-6.752M192.598 71.859a3.376 3.376 0 1 0 0 6.752 3.376 3.376 0 0 0 0-6.752M175.309 63.963a3.376 3.376 0 1 0 0 6.752 3.376 3.376 0 0 0 0-6.752"/>
                <path fill="#E1C79B" d="M137.299 99.805h73.006v5.941h-73.006a2.974 2.974 0 0 1-2.97-2.97 2.974 2.974 0 0 1 2.97-2.971zm3.014-11.968h73.104a2.974 2.974 0 0 1 2.97 2.97 2.974 2.974 0 0 1-2.97 2.971h-73.104v-5.941zm34.996-27.847c17.859 0 32.636 9.543 34.74 21.82h-69.48c2.103-12.277 16.881-21.82 34.74-21.82zm0 61.208c-31.653 0-34.677-.769-34.966-9.425h69.896c-.51 8.947-4.661 9.425-34.93 9.425zm-40.962-9.933c.753 15.948 9.395 15.961 40.962 15.961 32.333 0 41.024 0 41.024-18.467V99.31c3.533-1.215 6.082-4.563 6.082-8.503 0-3.998-2.622-7.391-6.236-8.559-1.747-15.815-19.404-28.285-40.87-28.285-22.62 0-41.024 13.844-41.024 30.86V94.296c-3.484 1.242-5.985 4.575-5.985 8.48 0 3.927 2.533 7.264 6.047 8.489z"/>
                <mask id="b" fill="#fff">
                    <use xlink:href="#a"/>
                </mask>
                <path fill="#E1C79B" d="M6.029 137.325h63.596V60.767H6.029v76.558zM0 143.352h75.653V54.74H0v88.612z" mask="url(#b)"/>
                <path fill="#E1C79B" d="M12.1 123.01h44.799v-6.027H12.1zM12.1 131.904h22.4v-6.027H12.1zM30.733 77.618c1.85 0 3.589.82 4.769 2.25l2.324 2.82 2.326-2.818a6.163 6.163 0 0 1 4.769-2.252 6.183 6.183 0 0 1 6.175 6.175c0 1.45-.517 2.86-1.46 3.976-.778.762-7.252 6.467-12.286 10.883-4.763-4.551-10.834-10.363-11.294-10.838a6.164 6.164 0 0 1-1.498-4.021 6.182 6.182 0 0 1 6.175-6.175m4.448 27.298l1.994 1.903 2.073-1.815c14.206-12.44 14.71-13.02 14.813-13.14l.106-.116a12.207 12.207 0 0 0 2.957-7.955c0-6.728-5.474-12.202-12.203-12.202a12.16 12.16 0 0 0-7.094 2.27 12.165 12.165 0 0 0-7.094-2.27c-6.73 0-12.204 5.474-12.204 12.202 0 2.916 1.052 5.742 2.997 7.999.115.13.462.53 13.655 13.124" mask="url(#b)"/>
            </g>
        </g>
      </svg>`],
      canRender: false
    };
  };


  async componentWillMount() {
    this.state.svgs = [
      await require('./slide1.png'),
      await require('./slide2.png'),
      await require('./slide3.png'),
      await require('./slide4.png'),
    ];
    this.setState({canRender: true});
  }
  next = () => {
    //this.setTags();
    this.props.navigation.navigate('SelectTags');
  };
  _renderItem = ({ item, index }) => {
    return (
      <View style={{
        flex: 1,
        justifyContent: 'flex-end',
        padding: 20,
      }}>
        <View style={{ flexDirection: 'row' , justifyContent: 'center', alignSelf: 'center', alignContent: 'center', flex: 1 }}>
          
            <Image
              resizeMode='contain'
              style={{
                width: 260,
                height: 150,
                alignSelf: 'center',
                alignContent: 'center',
                justifyContent: 'center',
                alignItems: 'center',
              }}
              source={this.state.svgs[index]}
            />
          {/*<View style={{ alignSelf: 'center' }}><IconD name={'slide1'} size={140} style={{ alignSelf: 'center' }} /></View>*/}
        </View>
        <Text style={{color: '#ffffff', fontWeight: 'bold', fontSize: 25, fontFamily: 'stem-medium'}}>{item.title}</Text>
        <Text style={{ color: '#dcc49c', fontSize: 12, fontFamily: 'open-sans-semibold' }}>{item.text}</Text>
      </View>
    );
  };

  render() {
    if (this.state.canRender)
    return (
      <View style={styles.container}>
        <Text style={styles.header}>{'Первый рекомендательный \nсервис еды'}</Text>

        <Carousel
          ref={(c) => { this._carousel = c; }}
          data={this.state.entries}
          renderItem={this._renderItem}
          sliderWidth={viewportWidth }
          itemWidth={(viewportWidth >= 320 && viewportWidth < 375) ? 280 : (viewportWidth >= 375 && viewportWidth < 414) ? 328 : 362}
          itemHeight={(viewportWidth >= 320 && viewportWidth < 375) ? 370 : (viewportWidth >= 375 && viewportWidth < 414) ? 435 : 479}
          onSnapToItem={(index) => this.setState({ activeSlide: index })}
          contentContainerCustomStyle={{
            alignSelf: 'center',
            justifyContent: 'center',
            alignItems: 'center',
            
          }}
          slideStyle={{
            height: (viewportWidth >= 320 && viewportWidth < 375) ? 370 : (viewportWidth >= 375 && viewportWidth < 414) ? 435 : 479,
            width: ((viewportWidth >= 320 && viewportWidth < 375) ? 280 : (viewportWidth >= 375 && viewportWidth < 414) ? 328 : 362),

            borderWidth: 1,
            borderColor: '#dcc49c',
            backgroundColor: '#292b37',
            borderRadius: 10,

            elevation: 10,
            shadowColor: '#000',
            shadowOffset: { width: 3, height: 3 },
            shadowOpacity: 0.32,
            shadowRadius: 6,
          }}
        />

        <Pagination
          inactiveDotScale={1}
          inactiveDotOpacity={0.2}
          dotsLength={this.state.entries.length}
          activeDotIndex={this.state.activeSlide}
          dotStyle={{
            width: 6,
            height: 6,
            margin: -2,
            borderRadius: 3,
            backgroundColor: '#ffffff',
          }}
          containerStyle={{
            top: ((viewportWidth >= 320 && viewportWidth < 375) ? -35 : (viewportWidth >= 375 && viewportWidth < 414) ? -50 : -50) ,
          }}
        />
        <View style={{
          position: 'absolute',
          alignSelf: 'center',
          width: viewportWidth - 30,
          bottom: 0,
          height: 49,
          borderTopWidth: 2,
          borderColor: '#dcc49c',
          flexDirection: 'row',
          justifyContent: 'center'
        }}>
          <TouchableOpacity onPress={this.next}
            style={{
              alignSelf: 'center',
            }}>
            <Text style={styles.nextButtonText}>Далее</Text>
          </TouchableOpacity>
        </View>
      </View>
      );
    else return null;
  }
}

const styles = StyleSheet.create({
  text: {
    color: 'white',
    fontSize: 20,
  },
  header: {
    color: 'white',
    fontSize: 16,
    fontWeight: 'bold',
    textAlign: 'center',
    letterSpacing: 1.1,
    lineHeight: 16,
    top: 4,
    fontFamily: 'stem-medium'
  },
  header2: {
    color: 'white',
    fontSize: 12,
    marginTop: 4,
    fontFamily: 'open-sans-semibold'
  },
  nextButtonText: {
    fontSize: 16,
    color: '#dcc49c',
    marginTop: 17,
    marginBottom: 17,
    textAlign: 'center',
    letterSpacing: 0.8,
    fontFamily: 'stem-regular'
  },
  afterHeader2: {
    color: '#dcc49c',
    fontWeight: 'bold',
    fontSize: 25,
    fontFamily: 'open-sans-semibold'
  },
  nextButtonText: {
    fontSize: 16,
    color: '#dcc49c',
    marginTop: 17,
    marginBottom: 17,
    textAlign: 'center',
    letterSpacing: 0.8,
    fontFamily: 'stem-regular'
  },
  checkingInfo: {
    fontFamily: 'open-sans',
    fontSize: 12,
    lineHeight: 14,
    textAlign: 'center',
    color: 'rgb( 87, 88, 98)'
  },
  container: {
    flex: 1,
    paddingTop: 52.8,
    backgroundColor: 'rgb( 45, 46, 58)',
    justifyContent: 'flex-start',
    alignItems: 'center',
  },
});